yarn run v1.12.3
$ spin -v watch
[90mspin [39m[34mdebug[39m SpinJS Config:
 { 'packages/client[web]':
   { entry: './src/index.ts',
     stack:
      Stack {
        technologies:
         [ 'apollo',
           'react',
           'styled-components',
           'css',
           'sass',
           'less',
           'es6',
           'ts',
           'webpack',
           'i18next',
           'web' ],
        platform: 'web' },
     openBrowser: true,
     dllExcludes: [ 'bootstrap' ],
     defines:
      { __DEV__: true,
        __API_URL__: '"/graphql"',
        'process.env.STRIPE_PUBLIC_KEY': undefined,
        __SSR__: true,
        __CLIENT__: true },
     waitOn: [ 'tcp:localhost:8080' ],
     enabled: true,
     name: 'web',
     require:
      { [Function: require]
        resolve: [Function],
        probe: [Function],
        cwd:
         '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/client' },
     plugins:
      [ WebpackPlugin {},
        WebAssetsPlugin {},
        CssProcessorPlugin {},
        ApolloPlugin {},
        TypeScriptPlugin {},
        BabelPlugin {},
        ReactPlugin {},
        ReactHotLoaderPlugin {},
        TCombPlugin {},
        FlowRuntimePLugin {},
        ReactNativePlugin {},
        ReactNativeWebPlugin {},
        StyledComponentsPlugin {},
        AngularPlugin {},
        VuePlugin {},
        I18NextPlugin {} ],
     roles: [ 'build', 'watch' ],
     cache: '../../.cache',
     ssr: true,
     webpackDll: true,
     reactHotLoader: false,
     webpackConfig: { devServer: { disableHostCheck: true } },
     devProxy: true,
     id: 'packages/client[web]',
     buildDir: 'build',
     nodeDebugger: true,
     dllBuildDir: 'build/dll',
     sourceMap: true,
     minify: true,
     projectRoot: '/Users/aperkey/Documents/dev/apollo-universal-starter-kit' },
  'packages/client[test]':
   { stack:
      Stack {
        technologies:
         [ 'apollo',
           'react',
           'styled-components',
           'css',
           'sass',
           'less',
           'es6',
           'ts',
           'webpack',
           'i18next',
           'server' ],
        platform: 'server' },
     roles: [ 'test' ],
     defines:
      { __DEV__: true,
        __API_URL__: '"/graphql"',
        'process.env.STRIPE_PUBLIC_KEY': undefined,
        __SSR__: true,
        __TEST__: true },
     name: 'test',
     require:
      { [Function: require]
        resolve: [Function],
        probe: [Function],
        cwd:
         '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/client' },
     plugins:
      [ WebpackPlugin {},
        WebAssetsPlugin {},
        CssProcessorPlugin {},
        ApolloPlugin {},
        TypeScriptPlugin {},
        BabelPlugin {},
        ReactPlugin {},
        ReactHotLoaderPlugin {},
        TCombPlugin {},
        FlowRuntimePLugin {},
        ReactNativePlugin {},
        ReactNativeWebPlugin {},
        StyledComponentsPlugin {},
        AngularPlugin {},
        VuePlugin {},
        I18NextPlugin {} ],
     cache: '../../.cache',
     ssr: true,
     webpackDll: true,
     reactHotLoader: false,
     webpackConfig: { devServer: { disableHostCheck: true } },
     devProxy: true,
     id: 'packages/client[test]',
     buildDir: 'build',
     nodeDebugger: true,
     dllBuildDir: 'build/dll',
     sourceMap: true,
     minify: true,
     projectRoot: '/Users/aperkey/Documents/dev/apollo-universal-starter-kit' },
  'packages/client-angular[web]':
   { entry: './src/index.ts',
     stack:
      Stack {
        technologies:
         [ 'apollo',
           'css',
           'sass',
           'less',
           'ts',
           'webpack',
           'i18next',
           'angular',
           'web' ],
        platform: 'web' },
     openBrowser: true,
     dllExcludes: [ 'bootstrap' ],
     defines:
      { __DEV__: true,
        __API_URL__: '"/graphql"',
        __SSR__: false,
        __CLIENT__: true },
     waitOn: [ 'tcp:localhost:8080' ],
     enabled: false,
     name: 'web',
     require:
      { [Function: require]
        resolve: [Function],
        probe: [Function],
        cwd:
         '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/client-angular' },
     plugins:
      [ WebpackPlugin {},
        WebAssetsPlugin {},
        CssProcessorPlugin {},
        ApolloPlugin {},
        TypeScriptPlugin {},
        BabelPlugin {},
        ReactPlugin {},
        ReactHotLoaderPlugin {},
        TCombPlugin {},
        FlowRuntimePLugin {},
        ReactNativePlugin {},
        ReactNativeWebPlugin {},
        StyledComponentsPlugin {},
        AngularPlugin {},
        VuePlugin {},
        I18NextPlugin {} ],
     roles: [ 'build', 'watch' ],
     cache: '../../.cache',
     ssr: false,
     webpackDll: true,
     webpackConfig: { devServer: { disableHostCheck: true } },
     devProxy: false,
     id: 'packages/client-angular[web]',
     buildDir: 'build',
     nodeDebugger: true,
     dllBuildDir: 'build/dll',
     sourceMap: true,
     minify: true,
     projectRoot: '/Users/aperkey/Documents/dev/apollo-universal-starter-kit' },
  'packages/client-angular[test]':
   { stack:
      Stack {
        technologies:
         [ 'apollo',
           'css',
           'sass',
           'less',
           'ts',
           'webpack',
           'i18next',
           'angular',
           'server' ],
        platform: 'server' },
     roles: [ 'test' ],
     defines:
      { __DEV__: true,
        __API_URL__: '"/graphql"',
        __SSR__: false,
        __TEST__: true },
     name: 'test',
     require:
      { [Function: require]
        resolve: [Function],
        probe: [Function],
        cwd:
         '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/client-angular' },
     plugins:
      [ WebpackPlugin {},
        WebAssetsPlugin {},
        CssProcessorPlugin {},
        ApolloPlugin {},
        TypeScriptPlugin {},
        BabelPlugin {},
        ReactPlugin {},
        ReactHotLoaderPlugin {},
        TCombPlugin {},
        FlowRuntimePLugin {},
        ReactNativePlugin {},
        ReactNativeWebPlugin {},
        StyledComponentsPlugin {},
        AngularPlugin {},
        VuePlugin {},
        I18NextPlugin {} ],
     cache: '../../.cache',
     ssr: false,
     webpackDll: true,
     webpackConfig: { devServer: { disableHostCheck: true } },
     devProxy: false,
     id: 'packages/client-angular[test]',
     buildDir: 'build',
     nodeDebugger: true,
     dllBuildDir: 'build/dll',
     sourceMap: true,
     minify: true,
     projectRoot: '/Users/aperkey/Documents/dev/apollo-universal-starter-kit' },
  'packages/common[test]':
   { stack:
      Stack {
        technologies: [ 'ts', 'webpack', 'i18next', 'server' ],
        platform: 'server' },
     roles: [ 'test' ],
     defines:
      { __DEV__: false, __API_URL__: '"/graphql"', __TEST__: true },
     name: 'test',
     require:
      { [Function: require]
        resolve: [Function],
        probe: [Function],
        cwd:
         '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/common' },
     plugins:
      [ WebpackPlugin {},
        WebAssetsPlugin {},
        CssProcessorPlugin {},
        ApolloPlugin {},
        TypeScriptPlugin {},
        BabelPlugin {},
        ReactPlugin {},
        ReactHotLoaderPlugin {},
        TCombPlugin {},
        FlowRuntimePLugin {},
        ReactNativePlugin {},
        ReactNativeWebPlugin {},
        StyledComponentsPlugin {},
        AngularPlugin {},
        VuePlugin {},
        I18NextPlugin {} ],
     cache: '../../.cache',
     id: 'packages/common[test]',
     buildDir: 'build',
     nodeDebugger: true,
     dllBuildDir: 'build/dll',
     webpackDll: true,
     sourceMap: true,
     minify: true,
     projectRoot: '/Users/aperkey/Documents/dev/apollo-universal-starter-kit' },
  'packages/mobile[android]':
   { entry: './src/index.ts',
     buildDir: 'build/android',
     dllBuildDir: 'build/android/dll',
     stack:
      Stack {
        technologies:
         [ 'apollo',
           'react',
           'styled-components',
           'es6',
           'ts',
           'webpack',
           'i18next',
           'react-native',
           'android' ],
        platform: 'android' },
     defines:
      { __DEV__: true,
        __API_URL__: '"http://localhost:8080/graphql"',
        __WEBSITE_URL__: '"http://localhost:8080"',
        'process.env.STRIPE_PUBLIC_KEY': undefined,
        __CLIENT__: true },
     enabled: false,
     name: 'android',
     require:
      { [Function: require]
        resolve: [Function],
        probe: [Function],
        cwd:
         '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/mobile' },
     plugins:
      [ WebpackPlugin {},
        WebAssetsPlugin {},
        CssProcessorPlugin {},
        ApolloPlugin {},
        TypeScriptPlugin {},
        BabelPlugin {},
        ReactPlugin {},
        ReactHotLoaderPlugin {},
        TCombPlugin {},
        FlowRuntimePLugin {},
        ReactNativePlugin {},
        ReactNativeWebPlugin {},
        StyledComponentsPlugin {},
        AngularPlugin {},
        VuePlugin {},
        I18NextPlugin {} ],
     roles: [ 'build', 'watch' ],
     cache: '../../.cache',
     webpackDll: true,
     reactHotLoader: false,
     persistGraphQL: false,
     id: 'packages/mobile[android]',
     nodeDebugger: true,
     sourceMap: true,
     minify: true,
     projectRoot: '/Users/aperkey/Documents/dev/apollo-universal-starter-kit' },
  'packages/mobile[ios]':
   { entry: './src/index.ts',
     buildDir: 'build/ios',
     dllBuildDir: 'build/ios/dll',
     stack:
      Stack {
        technologies:
         [ 'apollo',
           'react',
           'styled-components',
           'es6',
           'ts',
           'webpack',
           'i18next',
           'react-native',
           'ios' ],
        platform: 'ios' },
     defines:
      { __DEV__: true,
        __API_URL__: '"http://localhost:8080/graphql"',
        __WEBSITE_URL__: '"http://localhost:8080"',
        'process.env.STRIPE_PUBLIC_KEY': undefined,
        __CLIENT__: true },
     enabled: true,
     name: 'ios',
     require:
      { [Function: require]
        resolve: [Function],
        probe: [Function],
        cwd:
         '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/mobile' },
     plugins:
      [ WebpackPlugin {},
        WebAssetsPlugin {},
        CssProcessorPlugin {},
        ApolloPlugin {},
        TypeScriptPlugin {},
        BabelPlugin {},
        ReactPlugin {},
        ReactHotLoaderPlugin {},
        TCombPlugin {},
        FlowRuntimePLugin {},
        ReactNativePlugin {},
        ReactNativeWebPlugin {},
        StyledComponentsPlugin {},
        AngularPlugin {},
        VuePlugin {},
        I18NextPlugin {} ],
     roles: [ 'build', 'watch' ],
     cache: '../../.cache',
     webpackDll: true,
     reactHotLoader: false,
     persistGraphQL: false,
     id: 'packages/mobile[ios]',
     nodeDebugger: true,
     sourceMap: true,
     minify: true,
     projectRoot: '/Users/aperkey/Documents/dev/apollo-universal-starter-kit' },
  'packages/mobile[test]':
   { stack:
      Stack {
        technologies:
         [ 'apollo',
           'react',
           'styled-components',
           'es6',
           'ts',
           'webpack',
           'i18next',
           'server' ],
        platform: 'server' },
     roles: [ 'test' ],
     defines:
      { __DEV__: true,
        __API_URL__: '"http://localhost:8080/graphql"',
        __WEBSITE_URL__: '"http://localhost:8080"',
        'process.env.STRIPE_PUBLIC_KEY': undefined,
        __TEST__: true },
     name: 'test',
     require:
      { [Function: require]
        resolve: [Function],
        probe: [Function],
        cwd:
         '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/mobile' },
     plugins:
      [ WebpackPlugin {},
        WebAssetsPlugin {},
        CssProcessorPlugin {},
        ApolloPlugin {},
        TypeScriptPlugin {},
        BabelPlugin {},
        ReactPlugin {},
        ReactHotLoaderPlugin {},
        TCombPlugin {},
        FlowRuntimePLugin {},
        ReactNativePlugin {},
        ReactNativeWebPlugin {},
        StyledComponentsPlugin {},
        AngularPlugin {},
        VuePlugin {},
        I18NextPlugin {} ],
     cache: '../../.cache',
     webpackDll: true,
     reactHotLoader: false,
     persistGraphQL: false,
     id: 'packages/mobile[test]',
     buildDir: 'build',
     nodeDebugger: true,
     dllBuildDir: 'build/dll',
     sourceMap: true,
     minify: true,
     projectRoot: '/Users/aperkey/Documents/dev/apollo-universal-starter-kit' },
  'packages/server[server]':
   { entry: './src/index.ts',
     stack:
      Stack {
        technologies:
         [ 'apollo',
           'react',
           'styled-components',
           'css',
           'sass',
           'less',
           'es6',
           'js',
           'ts',
           'webpack',
           'i18next',
           'server' ],
        platform: 'server' },
     defines:
      { __DEV__: true,
        __SERVER_PORT__: 8080,
        __API_URL__: '"/graphql"',
        __WEBSITE_URL__: '"http://localhost:3000"',
        __SSR__: true,
        __FRONTEND_BUILD_DIR__: '"../client/build"',
        __DLL_BUILD_DIR__: '"../client/build/dll"',
        __SERVER__: true },
     enabled: true,
     name: 'server',
     require:
      { [Function: require]
        resolve: [Function],
        probe: [Function],
        cwd:
         '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/server' },
     plugins:
      [ WebpackPlugin {},
        WebAssetsPlugin {},
        CssProcessorPlugin {},
        ApolloPlugin {},
        TypeScriptPlugin {},
        BabelPlugin {},
        ReactPlugin {},
        ReactHotLoaderPlugin {},
        TCombPlugin {},
        FlowRuntimePLugin {},
        ReactNativePlugin {},
        ReactNativeWebPlugin {},
        StyledComponentsPlugin {},
        AngularPlugin {},
        VuePlugin {},
        I18NextPlugin {} ],
     roles: [ 'build', 'watch' ],
     cache: '../../.cache',
     ssr: true,
     webpackDll: true,
     reactHotLoader: false,
     persistGraphQL: false,
     frontendRefreshOnBackendChange: true,
     devProxy: true,
     id: 'packages/server[server]',
     buildDir: 'build',
     nodeDebugger: true,
     dllBuildDir: 'build/dll',
     sourceMap: true,
     minify: true,
     projectRoot: '/Users/aperkey/Documents/dev/apollo-universal-starter-kit' },
  'packages/server[test]':
   { stack:
      Stack {
        technologies:
         [ 'apollo',
           'react',
           'styled-components',
           'css',
           'sass',
           'less',
           'es6',
           'js',
           'ts',
           'webpack',
           'i18next',
           'server' ],
        platform: 'server' },
     roles: [ 'test' ],
     defines:
      { __DEV__: true,
        __SERVER_PORT__: 8080,
        __API_URL__: '"/graphql"',
        __WEBSITE_URL__: '"http://localhost:3000"',
        __SSR__: true,
        __FRONTEND_BUILD_DIR__: '"../client/build"',
        __DLL_BUILD_DIR__: '"../client/build/dll"',
        __TEST__: true },
     name: 'test',
     require:
      { [Function: require]
        resolve: [Function],
        probe: [Function],
        cwd:
         '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/server' },
     plugins:
      [ WebpackPlugin {},
        WebAssetsPlugin {},
        CssProcessorPlugin {},
        ApolloPlugin {},
        TypeScriptPlugin {},
        BabelPlugin {},
        ReactPlugin {},
        ReactHotLoaderPlugin {},
        TCombPlugin {},
        FlowRuntimePLugin {},
        ReactNativePlugin {},
        ReactNativeWebPlugin {},
        StyledComponentsPlugin {},
        AngularPlugin {},
        VuePlugin {},
        I18NextPlugin {} ],
     cache: '../../.cache',
     ssr: true,
     webpackDll: true,
     reactHotLoader: false,
     persistGraphQL: false,
     frontendRefreshOnBackendChange: true,
     devProxy: true,
     id: 'packages/server[test]',
     buildDir: 'build',
     nodeDebugger: true,
     dllBuildDir: 'build/dll',
     sourceMap: true,
     minify: true,
     projectRoot: '/Users/aperkey/Documents/dev/apollo-universal-starter-kit' } }
[90mspin [39m[34mdebug[39m packages/client[webDll] =  { name: 'webDll',
  module:
   { rules:
      [ { test: /\.mjs$/,
          include: /node_modules/,
          type: 'javascript/auto' },
        { test: /\.ts$/,
          exclude: /node_modules[\\\/](?!@module)/,
          use:
           [ { loader: 'cache-loader',
               options: { cacheDirectory: '../../.cache/cache-loader' } },
             { loader: 'ts-loader',
               options:
                { transpileOnly: true,
                  happyPackMode: false,
                  experimentalWatchApi: true } } ] },
        { test: /locales/,
          use: { loader: '@alienfast/i18next-loader', options: {} } } ] },
  resolve:
   { symlinks: false,
     cacheWithContext: false,
     extensions: [ '.ts', '.mjs', '.js', '.json' ] },
  watchOptions: { ignored: /build/ },
  bail: true,
  stats:
   { hash: false,
     version: false,
     timings: true,
     assets: false,
     chunks: false,
     modules: false,
     reasons: false,
     children: false,
     source: true,
     errors: true,
     errorDetails: true,
     warnings: true,
     publicPath: false,
     colors: true },
  output:
   { devtoolModuleFilenameTemplate: [Function],
     pathinfo: false,
     filename: 'vendor_web_[hash]_dll.js',
     path:
      '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/client/build/dll',
     library: 'vendor_web' },
  devtool: '#cheap-module-source-map',
  mode: 'development',
  performance: { hints: false },
  plugins:
   [ DefinePlugin {
       definitions:
        { 'process.env.NODE_ENV': '"development"',
          __DEV__: true,
          __API_URL__: '"/graphql"',
          'process.env.STRIPE_PUBLIC_KEY': undefined,
          __SSR__: true,
          __CLIENT__: true } },
     DllPlugin {
       options:
        { name: 'vendor_web', path: 'build/dll/vendor_web_dll.json' } },
     ForkTsCheckerWebpackPlugin {
       options:
        { tsconfig:
           '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/client/tsconfig.json',
          checkSyntacticErrors: false },
       tsconfig:
        '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/client/tsconfig.json',
       tslint: undefined,
       watch: [],
       ignoreDiagnostics: [],
       ignoreLints: [],
       logger:
        Console {
          log: [Function: bound consoleCall],
          debug: [Function: bound consoleCall],
          info: [Function: bound consoleCall],
          dirxml: [Function: bound consoleCall],
          warn: [Function: bound consoleCall],
          error: [Function: bound consoleCall],
          dir: [Function: bound consoleCall],
          time: [Function: bound consoleCall],
          timeEnd: [Function: bound consoleCall],
          timeLog: [Function: bound timeLog],
          trace: [Function: bound consoleCall],
          assert: [Function: bound consoleCall],
          clear: [Function: bound consoleCall],
          count: [Function: bound consoleCall],
          countReset: [Function: bound consoleCall],
          group: [Function: bound consoleCall],
          groupCollapsed: [Function: bound consoleCall],
          groupEnd: [Function: bound consoleCall],
          table: [Function: bound consoleCall],
          Console: [Function: Console],
          markTimeline: [Function: markTimeline],
          profile: [Function: profile],
          profileEnd: [Function: profileEnd],
          timeline: [Function: timeline],
          timelineEnd: [Function: timelineEnd],
          timeStamp: [Function: timeStamp],
          context: [Function: context],
          [Symbol(counts)]: Map {},
          [Symbol(kColorMode)]: 'auto' },
       silent: false,
       async: true,
       checkSyntacticErrors: false,
       workersNumber: 1,
       memoryLimit: 2048,
       useColors: true,
       colors: Chalk { level: 0, enabled: true },
       formatter: [Function: defaultFormatter],
       tsconfigPath: undefined,
       tslintPath: undefined,
       watchPaths: [],
       compiler: undefined,
       started: undefined,
       elapsed: undefined,
       cancellationToken: undefined,
       isWatching: false,
       checkDone: false,
       compilationDone: false,
       diagnostics: [],
       lints: [],
       emitCallback: [Function: noopEmitCallback],
       doneCallback: [Function: doneCallback],
       typescriptVersion: '2.9.2',
       tslintVersion: undefined,
       vue: false } ],
  node:
   { __dirname: true,
     __filename: true,
     fs: 'empty',
     net: 'empty',
     tls: 'empty' },
  optimization:
   { removeAvailableModules: false,
     removeEmptyChunks: false,
     splitChunks: false },
  entry:
   { vendor:
      [ '@fortawesome/fontawesome',
        '@fortawesome/fontawesome-free-brands',
        '@fortawesome/react-fontawesome',
        'antd',
        'apollo-cache-inmemory',
        'apollo-cache-router',
        'apollo-client',
        'apollo-link',
        'apollo-link-batch-http',
        'apollo-link-context',
        'apollo-link-state',
        'apollo-link-ws',
        'apollo-logger',
        'apollo-upload-client',
        'babel-polyfill',
        'error-stack-parser',
        'extract-files',
        'filesize',
        'formik',
        'graphql',
        'graphql-iso-date',
        'graphql-tag',
        'history',
        'i18next',
        'immutability-helper',
        'jwt-decode',
        'lodash',
        'minilog',
        'prop-types',
        'react',
        'react-apollo',
        'react-art',
        'react-cookie',
        'react-debounce-input',
        'react-dom',
        'react-dropzone',
        'react-ga',
        'react-helmet',
        'react-hot-loader',
        'react-i18next',
        'react-redux',
        'react-router',
        'react-router-dom',
        'react-router-redux',
        'react-stripe-elements',
        'react-transition-group',
        'reactstrap',
        'redux',
        'redux-devtools-extension',
        'sourcemapped-stacktrace',
        'styled-components',
        'subscriptions-transport-ws',
        'webpack-dev-server/client' ] },
  devServer: { disableHostCheck: true } }
[90mspin [39m[34mdebug[39m packages/client[web] =  { entry:
   { index:
      [ 'raf/polyfill',
        '@babel/polyfill',
        'webpack/hot/dev-server',
        'webpack-dev-server/client?http://localhost:3000/',
        './src/index.ts' ] },
  name: 'web',
  module:
   { rules:
      [ { test: /\.mjs$/,
          include: /node_modules/,
          type: 'javascript/auto' },
        { test: /\.(png|ico|jpg|gif|xml)$/,
          use:
           { loader: 'url-loader',
             options: { name: '[hash].[ext]', limit: 100000 } } },
        { test: /\.woff(2)?(\?v=[0-9]\.[0-9]\.[0-9])?$/,
          use:
           { loader: 'url-loader',
             options: { name: '[hash].[ext]', limit: 100000 } } },
        { test: /\.(otf|ttf|eot|svg)(\?v=[0-9]\.[0-9]\.[0-9])?$/,
          use: { loader: 'file-loader', options: { name: '[hash].[ext]' } } },
        { test: /^(?!.*\/node_modules\/).*\.css$/,
          use:
           [ { loader: 'style-loader', options: {} },
             { loader: 'css-loader',
               options: { sourceMap: true, importLoaders: 1 } },
             { loader: 'postcss-loader', options: { sourceMap: true } } ] },
        { test: /^.*\/node_modules\/.*\.css$/,
          use:
           [ { loader: 'style-loader', options: {} },
             { loader: 'css-loader',
               options: { sourceMap: true, importLoaders: 1 } } ] },
        { test: /^(?!.*\/node_modules\/).*\.scss$/,
          use:
           [ { loader: 'style-loader', options: {} },
             { loader: 'css-loader',
               options: { sourceMap: true, importLoaders: 1 } },
             { loader: 'postcss-loader', options: { sourceMap: true } },
             { loader: 'sass-loader', options: { sourceMap: true } } ] },
        { test: /^.*\/node_modules\/.*\.scss$/,
          use:
           [ { loader: 'style-loader', options: {} },
             { loader: 'css-loader',
               options: { sourceMap: true, importLoaders: 1 } },
             { loader: 'sass-loader', options: { sourceMap: true } } ] },
        { test: /^(?!.*\/node_modules\/).*\.less$/,
          use:
           [ { loader: 'style-loader', options: {} },
             { loader: 'css-loader',
               options: { sourceMap: true, importLoaders: 1 } },
             { loader: 'postcss-loader', options: { sourceMap: true } },
             { loader: 'less-loader',
               options: { javascriptEnabled: true, sourceMap: true } } ] },
        { test: /^.*\/node_modules\/.*\.less$/,
          use:
           [ { loader: 'style-loader', options: {} },
             { loader: 'css-loader',
               options: { sourceMap: true, importLoaders: 1 } },
             { loader: 'less-loader',
               options: { javascriptEnabled: true, sourceMap: true } } ] },
        { test: /\.graphqls/,
          use: { loader: 'raw-loader', options: {} } },
        { test: /\.(graphql|gql)$/,
          use: [ { loader: 'graphql-tag/loader', options: {} } ] },
        { test: /\.tsx?$/,
          exclude: /node_modules[\\\/](?!@module)/,
          use:
           [ { loader: 'cache-loader',
               options: { cacheDirectory: '../../.cache/cache-loader' } },
             { loader: 'ts-loader',
               options:
                { transpileOnly: true,
                  happyPackMode: false,
                  experimentalWatchApi: true } } ] },
        { test: /\.jsx?$/,
          exclude: /node_modules[\\\/](?!@module)/,
          use:
           { loader: 'heroku-babel-loader',
             options:
              { babelrc: true,
                cacheDirectory: '../../.cache/babel-loader',
                rootMode: 'upward-optional' } } },
        { test: /locales/,
          use: { loader: '@alienfast/i18next-loader', options: {} } } ],
     unsafeCache: false },
  resolve:
   { symlinks: false,
     cacheWithContext: false,
     unsafeCache: false,
     extensions:
      [ '.web.tsx',
        '.web.jsx',
        '.web.ts',
        '.web.mjs',
        '.web.js',
        '.tsx',
        '.jsx',
        '.ts',
        '.mjs',
        '.js',
        '.json' ] },
  watchOptions: { ignored: /build/ },
  bail: false,
  stats:
   { hash: false,
     version: false,
     timings: true,
     assets: false,
     chunks: false,
     modules: false,
     reasons: false,
     children: false,
     source: true,
     errors: true,
     errorDetails: true,
     warnings: true,
     publicPath: false,
     colors: true },
  output:
   { devtoolModuleFilenameTemplate: [Function],
     pathinfo: false,
     filename: '[name].[hash].js',
     path:
      '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/client/build',
     publicPath: '/' },
  devtool: '#cheap-module-source-map',
  mode: 'development',
  performance: { hints: false },
  plugins:
   [ HotModuleReplacementPlugin {
       options: {},
       multiStep: undefined,
       fullBuildTimeout: 200,
       requestTimeout: 10000 },
     DefinePlugin {
       definitions:
        { __CLIENT__: true,
          __SERVER__: false,
          __SSR__: true,
          __DEV__: true,
          __TEST__: false,
          'process.env.NODE_ENV': '"development"',
          __API_URL__: '"/graphql"',
          'process.env.STRIPE_PUBLIC_KEY': undefined } },
     ManifestPlugin {
       opts:
        { publicPath: null,
          basePath: '',
          fileName: 'assets.json',
          transformExtensions: /^(gz|map)$/i,
          writeToFileEmit: false,
          seed: null,
          filter: null,
          map: null,
          generate: null,
          sort: null,
          serialize: [Function: serialize] } },
     DefinePlugin { definitions: { __PERSIST_GQL__: undefined } },
     VirtualModulesPlugin {
       _staticModules:
        { '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/node_modules/persisted_queries.json': '{}' } },
     ForkTsCheckerWebpackPlugin {
       options:
        { tsconfig:
           '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/client/tsconfig.json',
          checkSyntacticErrors: false },
       tsconfig:
        '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/client/tsconfig.json',
       tslint: undefined,
       watch: [],
       ignoreDiagnostics: [],
       ignoreLints: [],
       logger:
        Console {
          log: [Function: bound consoleCall],
          debug: [Function: bound consoleCall],
          info: [Function: bound consoleCall],
          dirxml: [Function: bound consoleCall],
          warn: [Function: bound consoleCall],
          error: [Function: bound consoleCall],
          dir: [Function: bound consoleCall],
          time: [Function: bound consoleCall],
          timeEnd: [Function: bound consoleCall],
          timeLog: [Function: bound timeLog],
          trace: [Function: bound consoleCall],
          assert: [Function: bound consoleCall],
          clear: [Function: bound consoleCall],
          count: [Function: bound consoleCall],
          countReset: [Function: bound consoleCall],
          group: [Function: bound consoleCall],
          groupCollapsed: [Function: bound consoleCall],
          groupEnd: [Function: bound consoleCall],
          table: [Function: bound consoleCall],
          Console: [Function: Console],
          markTimeline: [Function: markTimeline],
          profile: [Function: profile],
          profileEnd: [Function: profileEnd],
          timeline: [Function: timeline],
          timelineEnd: [Function: timelineEnd],
          timeStamp: [Function: timeStamp],
          context: [Function: context],
          [Symbol(counts)]: Map {},
          [Symbol(kColorMode)]: 'auto' },
       silent: false,
       async: true,
       checkSyntacticErrors: false,
       workersNumber: 1,
       memoryLimit: 2048,
       useColors: true,
       colors: Chalk { level: 0, enabled: true },
       formatter: [Function: defaultFormatter],
       tsconfigPath: undefined,
       tslintPath: undefined,
       watchPaths: [],
       compiler: undefined,
       started: undefined,
       elapsed: undefined,
       cancellationToken: undefined,
       isWatching: false,
       checkDone: false,
       compilationDone: false,
       diagnostics: [],
       lints: [],
       emitCallback: [Function: noopEmitCallback],
       doneCallback: [Function: doneCallback],
       typescriptVersion: '2.9.2',
       tslintVersion: undefined,
       vue: false } ],
  node:
   { __dirname: true,
     __filename: true,
     fs: 'empty',
     net: 'empty',
     tls: 'empty' },
  optimization:
   { removeAvailableModules: false,
     removeEmptyChunks: false,
     splitChunks: false },
  devServer:
   { hot: true,
     publicPath: '/',
     headers: { 'Access-Control-Allow-Origin': '*' },
     quiet: false,
     noInfo: true,
     historyApiFallback: true,
     port: 3000,
     proxy:
      { '!(/sockjs-node/**/*|/*.hot-update.{json,js})':
         { target: 'http://localhost:8080', logLevel: 'info', ws: true } },
     disableHostCheck: true } }
[90mspin [39m[34mdebug[39m packages/mobile[iosDll] =  { name: 'iosDll',
  module:
   { rules:
      [ { test: /\.mjs$/,
          include: /node_modules/,
          type: 'javascript/auto' },
        { test: /\.ts$/,
          exclude: /node_modules[\\\/](?!@module)/,
          use:
           [ { loader: 'cache-loader',
               options: { cacheDirectory: '../../.cache/cache-loader' } },
             { loader: 'ts-loader',
               options:
                { transpileOnly: true,
                  happyPackMode: false,
                  experimentalWatchApi: true } } ] },
        { test: /\.js$/,
          exclude: /node_modules[\\\/](?!@module)/,
          use:
           { loader: 'heroku-babel-loader',
             options:
              { babelrc: true,
                cacheDirectory: '../../.cache/babel-loader',
                rootMode: 'upward-optional' } } },
        { test: /^.*[\\\/]node_modules[\\\/].*\.js$/,
          exclude:
           /node_modules[\\\/](?!react-native.*|@module|@expo|expo|lottie-react-native|haul|pretty-format|react-navigation|antd-mobile-rn)$/,
          use:
           { loader: 'heroku-babel-loader',
             options:
              { babelrc: true, cacheDirectory: '../../.cache/babel-loader' } } },
        { parser: { requireEnsure: false } },
        { test:
           /\.(bmp|gif|jpg|jpeg|png|psd|svg|webp|m4v|aac|aiff|caf|m4a|mp3|wav|html|pdf|ttf|otf)$/,
          use:
           { loader: 'spinjs/lib/plugins/react-native/assetLoader',
             options:
              { platform: 'ios',
                root:
                 '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/mobile',
                cwd:
                 '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/mobile',
                bundle: false } } },
        { test: /locales/,
          use: { loader: '@alienfast/i18next-loader', options: {} } } ] },
  resolve:
   { symlinks: false,
     cacheWithContext: false,
     extensions:
      [ '.ios.ts',
        '.ios.mjs',
        '.ios.js',
        '.native.ts',
        '.native.mjs',
        '.native.js',
        '.ts',
        '.mjs',
        '.js',
        '.json' ],
     plugins:
      [ HasteResolver { apply: [Function] },
        AssetResolver { apply: [Function: apply] } ],
     mainFields: [ 'react-native', 'browser', 'main' ] },
  watchOptions: { ignored: /build/ },
  bail: true,
  stats:
   { hash: false,
     version: false,
     timings: true,
     assets: false,
     chunks: false,
     modules: false,
     reasons: false,
     children: false,
     source: true,
     errors: true,
     errorDetails: true,
     warnings: true,
     publicPath: false,
     colors: true },
  output:
   { devtoolModuleFilenameTemplate: [Function],
     pathinfo: false,
     filename: 'vendor_ios_[hash]_dll.js',
     path:
      '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/mobile/build/ios/dll',
     library: 'vendor_ios' },
  devtool: '#cheap-module-source-map',
  mode: 'development',
  performance: { hints: false },
  plugins:
   [ DefinePlugin {
       definitions:
        { 'process.env.NODE_ENV': '"development"',
          __DEV__: true,
          __API_URL__: '"http://localhost:8080/graphql"',
          __WEBSITE_URL__: '"http://localhost:8080"',
          'process.env.STRIPE_PUBLIC_KEY': undefined,
          __CLIENT__: true } },
     DllPlugin {
       options:
        { name: 'vendor_ios',
          path: 'build/ios/dll/vendor_ios_dll.json' } },
     ForkTsCheckerWebpackPlugin {
       options:
        { tsconfig:
           '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/mobile/tsconfig.json',
          checkSyntacticErrors: false },
       tsconfig:
        '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/mobile/tsconfig.json',
       tslint: undefined,
       watch: [],
       ignoreDiagnostics: [],
       ignoreLints: [],
       logger:
        Console {
          log: [Function: bound consoleCall],
          debug: [Function: bound consoleCall],
          info: [Function: bound consoleCall],
          dirxml: [Function: bound consoleCall],
          warn: [Function: bound consoleCall],
          error: [Function: bound consoleCall],
          dir: [Function: bound consoleCall],
          time: [Function: bound consoleCall],
          timeEnd: [Function: bound consoleCall],
          timeLog: [Function: bound timeLog],
          trace: [Function: bound consoleCall],
          assert: [Function: bound consoleCall],
          clear: [Function: bound consoleCall],
          count: [Function: bound consoleCall],
          countReset: [Function: bound consoleCall],
          group: [Function: bound consoleCall],
          groupCollapsed: [Function: bound consoleCall],
          groupEnd: [Function: bound consoleCall],
          table: [Function: bound consoleCall],
          Console: [Function: Console],
          markTimeline: [Function: markTimeline],
          profile: [Function: profile],
          profileEnd: [Function: profileEnd],
          timeline: [Function: timeline],
          timelineEnd: [Function: timelineEnd],
          timeStamp: [Function: timeStamp],
          context: [Function: context],
          [Symbol(counts)]: Map {},
          [Symbol(kColorMode)]: 'auto' },
       silent: false,
       async: true,
       checkSyntacticErrors: false,
       workersNumber: 1,
       memoryLimit: 2048,
       useColors: true,
       colors: Chalk { level: 0, enabled: true },
       formatter: [Function: defaultFormatter],
       tsconfigPath: undefined,
       tslintPath: undefined,
       watchPaths: [],
       compiler: undefined,
       started: undefined,
       elapsed: undefined,
       cancellationToken: undefined,
       isWatching: false,
       checkDone: false,
       compilationDone: false,
       diagnostics: [],
       lints: [],
       emitCallback: [Function: noopEmitCallback],
       doneCallback: [Function: doneCallback],
       typescriptVersion: '2.9.2',
       tslintVersion: undefined,
       vue: false },
     VirtualModulesPlugin {
       _staticModules:
        { 'node_modules/@virtual/react-native-polyfill.js':
           'require(\'react-native/Libraries/polyfills/Object.es6.js\');\nrequire(\'react-native/Libraries/polyfills/console.js\');\nrequire(\'react-native/Libraries/polyfills/error-guard.js\');\nrequire(\'react-native/Libraries/polyfills/Number.es6.js\');\nrequire(\'react-native/Libraries/polyfills/String.prototype.es6.js\');\nrequire(\'react-native/Libraries/polyfills/Array.prototype.es6.js\');\nrequire(\'react-native/Libraries/polyfills/Array.es6.js\');\nrequire(\'react-native/Libraries/polyfills/Object.es7.js\');\nrequire(\'react-native/Libraries/polyfills/babelHelpers.js\');\n\nglobal.__DEV__ = __DEV__;\nglobal.__BUNDLE_START_TIME__ = global.nativePerformanceNow ? global.nativePerformanceNow() : Date.now();\n\nif (!global.self) {\n  global.self = global;\n}\nrequire(\'react-native/Libraries/Core/InitializeCore.js\');\n' } } ],
  node:
   { __dirname: true,
     __filename: true,
     fs: 'empty',
     net: 'empty',
     tls: 'empty' },
  optimization:
   { removeAvailableModules: false,
     removeEmptyChunks: false,
     splitChunks: false },
  entry:
   { vendor:
      [ '@expo/vector-icons',
        'antd-mobile-rn',
        'apollo-cache-inmemory',
        'apollo-cache-router',
        'apollo-client',
        'apollo-link',
        'apollo-link-batch-http',
        'apollo-link-state',
        'apollo-link-ws',
        'apollo-logger',
        'apollo-upload-client',
        'expo',
        'extract-files',
        'filesize',
        'graphql',
        'graphql-iso-date',
        'graphql-tag',
        'i18next',
        'immutability-helper',
        'lodash',
        'minilog',
        'native-base',
        'prop-types',
        'react',
        'react-apollo',
        'react-debounce-input',
        'react-i18next',
        'react-native',
        'react-native-credit-card-input',
        'react-native-elements',
        'react-native-keyboard-spacer',
        'react-native-mime-types',
        'react-native-modal',
        'react-native-simple-picker',
        'react-navigation',
        'react-redux',
        'redux',
        'subscriptions-transport-ws',
        'uuid',
        '@virtual/react-native-polyfill' ] },
  target: 'webworker' }
[90mspin [39m[34mdebug[39m packages/mobile[ios] =  { plugins:
   [ SourceMapDevToolPlugin {
       sourceMapFilename: '[file].map',
       sourceMappingURLComment: '\n//# sourceMappingURL=[url]',
       moduleFilenameTemplate: 'webpack://[namespace]/[resourcePath]',
       fallbackModuleFilenameTemplate: 'webpack://[namespace]/[resourcePath]?[hash]',
       namespace: '',
       options: { test: /\.bundle$/, filename: '[file].map' } },
     DefinePlugin {
       definitions:
        { __CLIENT__: true,
          __SERVER__: false,
          __SSR__: undefined,
          __DEV__: true,
          __TEST__: false,
          'process.env.NODE_ENV': '"development"',
          __API_URL__: '"http://localhost:8080/graphql"',
          __WEBSITE_URL__: '"http://localhost:8080"',
          'process.env.STRIPE_PUBLIC_KEY': undefined } },
     ForkTsCheckerWebpackPlugin {
       options:
        { tsconfig:
           '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/mobile/tsconfig.json',
          checkSyntacticErrors: false },
       tsconfig:
        '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/mobile/tsconfig.json',
       tslint: undefined,
       watch: [],
       ignoreDiagnostics: [],
       ignoreLints: [],
       logger:
        Console {
          log: [Function: bound consoleCall],
          debug: [Function: bound consoleCall],
          info: [Function: bound consoleCall],
          dirxml: [Function: bound consoleCall],
          warn: [Function: bound consoleCall],
          error: [Function: bound consoleCall],
          dir: [Function: bound consoleCall],
          time: [Function: bound consoleCall],
          timeEnd: [Function: bound consoleCall],
          timeLog: [Function: bound timeLog],
          trace: [Function: bound consoleCall],
          assert: [Function: bound consoleCall],
          clear: [Function: bound consoleCall],
          count: [Function: bound consoleCall],
          countReset: [Function: bound consoleCall],
          group: [Function: bound consoleCall],
          groupCollapsed: [Function: bound consoleCall],
          groupEnd: [Function: bound consoleCall],
          table: [Function: bound consoleCall],
          Console: [Function: Console],
          markTimeline: [Function: markTimeline],
          profile: [Function: profile],
          profileEnd: [Function: profileEnd],
          timeline: [Function: timeline],
          timelineEnd: [Function: timelineEnd],
          timeStamp: [Function: timeStamp],
          context: [Function: context],
          [Symbol(counts)]: Map {},
          [Symbol(kColorMode)]: 'auto' },
       silent: false,
       async: true,
       checkSyntacticErrors: false,
       workersNumber: 1,
       memoryLimit: 2048,
       useColors: true,
       colors: Chalk { level: 0, enabled: true },
       formatter: [Function: defaultFormatter],
       tsconfigPath: undefined,
       tslintPath: undefined,
       watchPaths: [],
       compiler: undefined,
       started: undefined,
       elapsed: undefined,
       cancellationToken: undefined,
       isWatching: false,
       checkDone: false,
       compilationDone: false,
       diagnostics: [],
       lints: [],
       emitCallback: [Function: noopEmitCallback],
       doneCallback: [Function: doneCallback],
       typescriptVersion: '2.9.2',
       tslintVersion: undefined,
       vue: false },
     VirtualModulesPlugin {
       _staticModules:
        { 'node_modules/@virtual/react-native-polyfill.js':
           'require(\'react-native/Libraries/polyfills/Object.es6.js\');\nrequire(\'react-native/Libraries/polyfills/console.js\');\nrequire(\'react-native/Libraries/polyfills/error-guard.js\');\nrequire(\'react-native/Libraries/polyfills/Number.es6.js\');\nrequire(\'react-native/Libraries/polyfills/String.prototype.es6.js\');\nrequire(\'react-native/Libraries/polyfills/Array.prototype.es6.js\');\nrequire(\'react-native/Libraries/polyfills/Array.es6.js\');\nrequire(\'react-native/Libraries/polyfills/Object.es7.js\');\nrequire(\'react-native/Libraries/polyfills/babelHelpers.js\');\n\nglobal.__DEV__ = __DEV__;\nglobal.__BUNDLE_START_TIME__ = global.nativePerformanceNow ? global.nativePerformanceNow() : Date.now();\n\nif (!global.self) {\n  global.self = global;\n}\nrequire(\'react-native/Libraries/Core/InitializeCore.js\');\n' } } ],
  entry:
   { index:
      [ '@virtual/react-native-polyfill',
        'raf/polyfill',
        '@babel/polyfill',
        './src/index.ts' ] },
  name: 'ios',
  module:
   { rules:
      [ { test: /\.mjs$/,
          include: /node_modules/,
          type: 'javascript/auto' },
        { test: /\.graphqls/,
          use: { loader: 'raw-loader', options: {} } },
        { test: /\.(graphql|gql)$/,
          use: [ { loader: 'graphql-tag/loader', options: {} } ] },
        { test: /\.tsx?$/,
          exclude: /node_modules[\\\/](?!@module)/,
          use:
           [ { loader: 'cache-loader',
               options: { cacheDirectory: '../../.cache/cache-loader' } },
             { loader: 'ts-loader',
               options:
                { transpileOnly: true,
                  happyPackMode: false,
                  experimentalWatchApi: true } } ] },
        { test: /\.jsx?$/,
          exclude: /node_modules[\\\/](?!@module)/,
          use:
           { loader: 'heroku-babel-loader',
             options:
              { babelrc: true,
                cacheDirectory: '../../.cache/babel-loader',
                rootMode: 'upward-optional' } } },
        { test: /^.*[\\\/]node_modules[\\\/].*\.jsx?$/,
          exclude:
           /node_modules[\\\/](?!react-native.*|@module|@expo|expo|lottie-react-native|haul|pretty-format|react-navigation|antd-mobile-rn)$/,
          use:
           { loader: 'heroku-babel-loader',
             options:
              { babelrc: true, cacheDirectory: '../../.cache/babel-loader' } } },
        { parser: { requireEnsure: false } },
        { test:
           /\.(bmp|gif|jpg|jpeg|png|psd|svg|webp|m4v|aac|aiff|caf|m4a|mp3|wav|html|pdf|ttf|otf)$/,
          use:
           { loader: 'spinjs/lib/plugins/react-native/assetLoader',
             options:
              { platform: 'ios',
                root:
                 '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/mobile',
                cwd:
                 '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/mobile',
                bundle: false } } },
        { test: /locales/,
          use: { loader: '@alienfast/i18next-loader', options: {} } } ],
     unsafeCache: false },
  resolve:
   { symlinks: false,
     cacheWithContext: false,
     unsafeCache: false,
     extensions:
      [ '.ios.tsx',
        '.ios.jsx',
        '.ios.ts',
        '.ios.mjs',
        '.ios.js',
        '.native.tsx',
        '.native.jsx',
        '.native.ts',
        '.native.mjs',
        '.native.js',
        '.tsx',
        '.jsx',
        '.ts',
        '.mjs',
        '.js',
        '.json' ],
     plugins:
      [ HasteResolver { apply: [Function] },
        AssetResolver { apply: [Function: apply] } ],
     mainFields: [ 'react-native', 'browser', 'main' ] },
  watchOptions: { ignored: /build/ },
  bail: false,
  stats:
   { hash: false,
     version: false,
     timings: true,
     assets: false,
     chunks: false,
     modules: false,
     reasons: false,
     children: false,
     source: true,
     errors: true,
     errorDetails: true,
     warnings: true,
     publicPath: false,
     colors: true },
  output:
   { devtoolModuleFilenameTemplate: [Function],
     pathinfo: false,
     filename: 'index.mobile.bundle',
     publicPath: '/',
     path:
      '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/mobile/build/ios' },
  devtool: '#cheap-module-source-map',
  mode: 'development',
  performance: { hints: false },
  node:
   { __dirname: true,
     __filename: true,
     fs: 'empty',
     net: 'empty',
     tls: 'empty' },
  optimization:
   { removeAvailableModules: false,
     removeEmptyChunks: false,
     splitChunks: false },
  devServer:
   { hot: false,
     publicPath: '/',
     headers: { 'Access-Control-Allow-Origin': '*' },
     quiet: false,
     noInfo: true,
     historyApiFallback: true,
     port: 3020 },
  target: 'webworker' }
[90mspin [39m[34mdebug[39m packages/server[server] =  { entry:
   { index:
      [ 'raf/polyfill',
        '@babel/polyfill',
        'webpack/hot/signal.js',
        './src/index.ts' ] },
  name: 'server',
  module:
   { rules:
      [ { test: /\.mjs$/,
          include: /node_modules/,
          type: 'javascript/auto' },
        { test: /\.(png|ico|jpg|gif|xml)$/,
          use:
           { loader: 'url-loader',
             options: { name: '[hash].[ext]', limit: 100000 } } },
        { test: /\.woff(2)?(\?v=[0-9]\.[0-9]\.[0-9])?$/,
          use:
           { loader: 'url-loader',
             options: { name: '[hash].[ext]', limit: 100000 } } },
        { test: /\.(otf|ttf|eot|svg)(\?v=[0-9]\.[0-9]\.[0-9])?$/,
          use: { loader: 'file-loader', options: { name: '[hash].[ext]' } } },
        { test: /^(?!.*\/node_modules\/).*\.css$/,
          use:
           [ { loader: 'isomorphic-style-loader', options: {} },
             { loader: 'css-loader', options: { sourceMap: true } },
             { loader: 'postcss-loader', options: { sourceMap: true } } ] },
        { test: /^.*\/node_modules\/.*\.css$/,
          use:
           [ { loader: 'isomorphic-style-loader', options: {} },
             { loader: 'css-loader', options: { sourceMap: true } } ] },
        { test: /^(?!.*\/node_modules\/).*\.scss$/,
          use:
           [ { loader: 'isomorphic-style-loader', options: {} },
             { loader: 'css-loader', options: { sourceMap: true } },
             { loader: 'postcss-loader', options: { sourceMap: true } },
             { loader: 'sass-loader', options: { sourceMap: true } } ] },
        { test: /^.*\/node_modules\/.*\.scss$/,
          use:
           [ { loader: 'isomorphic-style-loader', options: {} },
             { loader: 'css-loader', options: { sourceMap: true } },
             { loader: 'sass-loader', options: { sourceMap: true } } ] },
        { test: /^(?!.*\/node_modules\/).*\.less$/,
          use:
           [ { loader: 'isomorphic-style-loader', options: {} },
             { loader: 'css-loader', options: { sourceMap: true } },
             { loader: 'postcss-loader', options: { sourceMap: true } },
             { loader: 'less-loader',
               options: { javascriptEnabled: true, sourceMap: true } } ] },
        { test: /^.*\/node_modules\/.*\.less$/,
          use:
           [ { loader: 'isomorphic-style-loader', options: {} },
             { loader: 'css-loader', options: { sourceMap: true } },
             { loader: 'less-loader',
               options: { javascriptEnabled: true, sourceMap: true } } ] },
        { test: /\.graphqls/,
          use: { loader: 'raw-loader', options: {} } },
        { test: /\.(graphql|gql)$/,
          use: [ { loader: 'graphql-tag/loader', options: {} } ] },
        { test: /\.tsx?$/,
          exclude: /node_modules[\\\/](?!@module)/,
          use:
           [ { loader: 'cache-loader',
               options: { cacheDirectory: '../../.cache/cache-loader' } },
             { loader: 'ts-loader',
               options:
                { transpileOnly: true,
                  happyPackMode: false,
                  experimentalWatchApi: true } } ] },
        { test: /\.jsx?$/,
          exclude: /node_modules[\\\/](?!@module)/,
          use:
           { loader: 'heroku-babel-loader',
             options:
              { babelrc: true,
                cacheDirectory: '../../.cache/babel-loader',
                rootMode: 'upward-optional' } } },
        { test: /locales/,
          use: { loader: '@alienfast/i18next-loader', options: {} } } ],
     unsafeCache: false },
  resolve:
   { symlinks: false,
     cacheWithContext: false,
     unsafeCache: false,
     extensions:
      [ '.web.tsx',
        '.web.jsx',
        '.web.ts',
        '.web.mjs',
        '.web.js',
        '.tsx',
        '.jsx',
        '.ts',
        '.mjs',
        '.js',
        '.json' ] },
  watchOptions: { ignored: /build/ },
  bail: false,
  stats:
   { hash: false,
     version: false,
     timings: true,
     assets: false,
     chunks: false,
     modules: false,
     reasons: false,
     children: false,
     source: true,
     errors: true,
     errorDetails: true,
     warnings: true,
     publicPath: false,
     colors: true },
  output:
   { devtoolModuleFilenameTemplate: [Function],
     pathinfo: false,
     filename: '[name].js',
     path:
      '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/server/build',
     publicPath: '/',
     sourceMapFilename: '[name].[chunkhash].js.map' },
  devtool: '#cheap-module-source-map',
  mode: 'development',
  performance: { hints: false },
  plugins:
   [ HotModuleReplacementPlugin {
       options: {},
       multiStep: undefined,
       fullBuildTimeout: 200,
       requestTimeout: 10000 },
     BannerPlugin {
       options:
        { banner: 'require("source-map-support").install();',
          raw: true,
          entryOnly: false },
       banner: [Function] },
     DefinePlugin {
       definitions:
        { __CLIENT__: false,
          __SERVER__: true,
          __SSR__: true,
          __DEV__: true,
          __TEST__: false,
          'process.env.NODE_ENV': '"development"',
          __SERVER_PORT__: 8080,
          __API_URL__: '"/graphql"',
          __WEBSITE_URL__: '"http://localhost:3000"',
          __FRONTEND_BUILD_DIR__: '"../client/build"',
          __DLL_BUILD_DIR__: '"../client/build/dll"' } },
     DefinePlugin { definitions: { __PERSIST_GQL__: false } },
     VirtualModulesPlugin {
       _staticModules:
        { '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/node_modules/persisted_queries.json': '{}' } },
     ForkTsCheckerWebpackPlugin {
       options:
        { tsconfig:
           '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/server/tsconfig.json',
          checkSyntacticErrors: false },
       tsconfig:
        '/Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/server/tsconfig.json',
       tslint: undefined,
       watch: [],
       ignoreDiagnostics: [],
       ignoreLints: [],
       logger:
        Console {
          log: [Function: bound consoleCall],
          debug: [Function: bound consoleCall],
          info: [Function: bound consoleCall],
          dirxml: [Function: bound consoleCall],
          warn: [Function: bound consoleCall],
          error: [Function: bound consoleCall],
          dir: [Function: bound consoleCall],
          time: [Function: bound consoleCall],
          timeEnd: [Function: bound consoleCall],
          timeLog: [Function: bound timeLog],
          trace: [Function: bound consoleCall],
          assert: [Function: bound consoleCall],
          clear: [Function: bound consoleCall],
          count: [Function: bound consoleCall],
          countReset: [Function: bound consoleCall],
          group: [Function: bound consoleCall],
          groupCollapsed: [Function: bound consoleCall],
          groupEnd: [Function: bound consoleCall],
          table: [Function: bound consoleCall],
          Console: [Function: Console],
          markTimeline: [Function: markTimeline],
          profile: [Function: profile],
          profileEnd: [Function: profileEnd],
          timeline: [Function: timeline],
          timelineEnd: [Function: timelineEnd],
          timeStamp: [Function: timeStamp],
          context: [Function: context],
          [Symbol(counts)]: Map {},
          [Symbol(kColorMode)]: 'auto' },
       silent: false,
       async: true,
       checkSyntacticErrors: false,
       workersNumber: 1,
       memoryLimit: 2048,
       useColors: true,
       colors: Chalk { level: 0, enabled: true },
       formatter: [Function: defaultFormatter],
       tsconfigPath: undefined,
       tslintPath: undefined,
       watchPaths: [],
       compiler: undefined,
       started: undefined,
       elapsed: undefined,
       cancellationToken: undefined,
       isWatching: false,
       checkDone: false,
       compilationDone: false,
       diagnostics: [],
       lints: [],
       emitCallback: [Function: noopEmitCallback],
       doneCallback: [Function: doneCallback],
       typescriptVersion: '2.9.2',
       tslintVersion: undefined,
       vue: false } ],
  target: 'node',
  externals: [Function: externals],
  optimization:
   { removeAvailableModules: false,
     removeEmptyChunks: false,
     splitChunks: false },
  node: { __dirname: true, __filename: true } }
Starting type checking service...
Using 1 worker with 2048MB memory limit
Starting type checking service...
Using 1 worker with 2048MB memory limit
[HPM] Proxy created: !(/sockjs-node/**/*|/*.hot-update.{json,js})  ->  http://localhost:8080
[90mweb-webpack [39m[36minfo[39m Webpack dev server listening on http://localhost:3000
Starting type checking service...
Using 1 worker with 2048MB memory limit
[90mios-webpack [39m[36minfo[39m Webpack dev server listening on http://localhost:3020
Type checking in progress...
[90mserver-webpack [39m[34mdebug[39m Starting backend
[90mserver-webpack [39m[36minfo[39m Time: [1m5266[39m[22mms
Built at: 12/14/2018 [1m5:21:09 PM[39m[22m
Entrypoint [1mindex[39m[22m [1m[33m[big][39m[22m = [1m[32mindex.js[39m[22m [1m[32mindex.4120f38a7dfb183e8121.js.map[39m[22m
[90mserver-webpack [39m[34mdebug[39m Spawning node --inspect=9229 /Users/aperkey/Documents/dev/apollo-universal-starter-kit/packages/server/build/index.js
No type errors found
Version: typescript 2.9.2
Time: 7664ms
Type checking in progress...
[90mweb-webpack [39m[34mdebug[39m waiting for tcp:localhost:8080
[90mios-webpack [39m[36minfo[39m bundle is now VALID.
[90mios-webpack [39m[36minfo[39m Time: [1m3778[39m[22mms
Built at: 12/14/2018 [1m5:21:12 PM[39m[22m
Entrypoint [1mindex[39m[22m [1m[33m[big][39m[22m = [1m[32mindex.mobile.bundle[39m[22m [1m[32mindex.mobile.bundle.map[39m[22m
No type errors found
Version: typescript 2.9.2
Time: 7432ms
[90mbackend [39m[36minfo[39m API is now running on port 8080
[90mexpo-for-ios [39m[34mdebug[39m Local server listening at http://:::19500
[90mios-webpack [39m[36minfo[39m Expo address for ios, Local: exp://localhost:19500, LAN: exp://172.22.5.63:19500
[90mios-webpack [39m[36minfo[39m To open this app on your phone scan this QR code in Expo Client (if it doesn't get started automatically)
[90mios-webpack [39m[36minfo[39m 
[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m
[47m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m
[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m
[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m
[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m
[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m
[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m
[47m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m
[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m
[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m
[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m
[47m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m
[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m
[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m
[47m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m
[47m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m
[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m
[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m
[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m
[47m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m
[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m
[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m
[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m
[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m
[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m
[47m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[40m  [0m[47m  [0m[40m  [0m[40m  [0m[47m  [0m[47m  [0m[47m  [0m[40m  [0m[47m  [0m
[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m[47m  [0m
[90mweb-webpack [39m[34mdebug[39m Backend has been started, resuming webpack dev server...
No type errors found
Version: typescript 2.9.2
Time: 8753ms
[90mweb-webpack [39m[34mdebug[39m bundle is now VALID.
[90mweb-webpack [39m[36minfo[39m Time: [1m11528[39m[22mms
Built at: 12/14/2018 [1m5:21:20 PM[39m[22m
Entrypoint [1mindex[39m[22m [1m[33m[big][39m[22m = [1m[32mindex.0a23d57f80410e65907b.js[39m[22m [1m[32mindex.0a23d57f80410e65907b.js.map[39m[22m
[90mbackend [39m[34mdebug[39m read session { csrfToken: [32m'bfdbcf93d0e158019e2ef4c0e3883b18'[39m }
[90mbackend [39m[34mdebug[39m {"data":{"currentUser":null}} <= currentUser
[90mbackend [39m[34mdebug[39m {"data":{"serverCounter":{"amount":5,"__typename":"Counter"}}} <= serverCounterQuery
[90mexpo-for-ios [39m[36minfo[39m Opening exp://localhost:19500 in iOS simulator
[90mbackend [39m[34mdebug[39m read session { csrfToken: [32m'bfdbcf93d0e158019e2ef4c0e3883b18'[39m }
[90mbackend [39m[34mdebug[39m {"data":{"currentUser":null}} <= currentUser
[90mbackend [39m[34mdebug[39m {"data":{"serverCounter":{"amount":5,"__typename":"Counter"}}} <= serverCounterQuery
